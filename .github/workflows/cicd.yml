name: CICD
on: [push]

jobs:
  build-docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: ghcr.io/${{ github.repository }}/next-image:latest
          target: next

  deploy-docker:
    runs-on: ubuntu-latest
    needs: [build-docker]
    steps:
      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
          sudo docker compose -f docker-compose.prod.yml up -d --pull=always"


  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - run: |
  #         npm ci
  #         npm run build
  #     - uses: actions/cache/save@v3
  #       with:
  #         path: |
  #           ~/.cache/Cypress
  #           node_modules
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}

  # test:
  #   runs-on: ubuntu-latest
  #   needs: [build]
  #   strategy:
  #     matrix:
  #       browser: [chrome, edge]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/cache/restore@v3
  #       with:
  #         path: |
  #           ~/.cache/Cypress
  #           node_modules
  #         key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
  #     - name: Cypress run
  #       uses: cypress-io/github-action@v6
  #       with:
  #         install: false
  #         build: npm run build
  #         start: npm run start
  #         browser: ${{ matrix.browser }}
  #     - uses: actions/upload-artifact@v4
  #       if: always()
  #       with:
  #         name: Cypress video ${{ matrix.browser }}
  #         path: cypress/videos/

  # deploy:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: webfactory/ssh-agent@v0.8.0
  #       with:
  #         ssh-private-key: ${{ secrets.SSH_KEY }}

  #     - run: |
  #         ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "\
  #         cd cesi-cicd && \
  #         git pull && \
  #         npm install && \
  #         npm run build && \
  #         pm2 restart npm"
